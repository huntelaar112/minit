ARG USER=root BUILDDIR="/build" ZABBIX_VERSION="6.4-ubuntu-latest" 
ARG VERSION="6.4-ubuntu-latest"
ARG nvidia_binary_version="525.105.17" 
ARG nvidia_binary="NVIDIA-Linux-x86_64-${nvidia_binary_version}.run"
ARG etcServicePreStartDir="/etc/minit_prestart" etcServiceDir="/etc/minit"

FROM golang:1.21.6-bookworm as build
ARG USER BUILDDIR
CMD /bin/bash
COPY . ${BUILDDIR}

RUN cd ${BUILDDIR} && go build -o minit

RUN cd / && git clone https://github.com/huntelaar112/zabbix-healchecknginx.git && cd /zabbix-healchecknginx && go build -o healcheck_nginx

################################################
# chagne image base depend on your app
FROM zabbix/zabbix-agent2:${ZABBIX_VERSION}
LABEL maintainer="khacman98@gmail.com"
#CMD /bin/bash

# change port depend on your app
ARG USER BUILDDIR EXPOSE_PORT="10050 22" etcServicePreStartDir etcServiceDir nvidia_binary_version nvidia_binary
USER root
ENV TZ=Asia/Ho_Chi_Minh

COPY --from=build ${BUILDDIR} ${BUILDDIR}
COPY --from=build /zabbix-healchecknginx/healcheck_nginx ${BUILDDIR}/build-zabbix/script_conf

# install nvidia before driver if nvidia_binary_version is specific version
#RUN if [[ ! -z "$nvidia_binary_version" ]] ; wget -q https://us.download.nvidia.com/XFree86/Linux-x86_64/${nvidia_binary_version}/${nvidia_binary} && chmod +x ${nvidia_binary} && \
#  ./${nvidia_binary} --accept-license --ui=none --no-kernel-module --no-questions && \
#  rm -rf ${nvidia_binary}; fi

RUN apt-get dist-upgrade -y --no-install-recommends -o Dpkg::Options::="--force-confold"
RUN chmod +x ${BUILDDIR}/buildconfig && cp ${BUILDDIR}/buildconfig /bin
RUN ${BUILDDIR}/imageSetup/imagePrepare.sh && \
	${BUILDDIR}/imageSetup/imageSystemServices.sh && \
    cp ${BUILDDIR}/minit /bin 

RUN cp ${BUILDDIR}/build-zabbix/script_conf/zabbix-agent-init.sh ${etcServicePreStartDir} && cp ${BUILDDIR}/build-zabbix/script_conf/zabbix-agent.minit /etc/minit && cp ${BUILDDIR}/build-zabbix/script_conf/docker-entrypoint-zabbixoriginal.sh ${etcServicePreStartDir}

#RUN echo "Nvidia version: $nvidia_binary_version"
#RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
#RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
#  --mount=type=cache,target=/var/lib/apt,sharing=locked \
#  apt update && apt install -y curl nano kmod iputils-ping wget

RUN ${BUILDDIR}/imageSetup/imageCleanup.sh 
#RUN ${BUILDDIR}/imageSetup/imageCleanup.sh release

ENV DEBIAN_FRONTEND="teletype" \
    LANG="en_US.UTF-8" \
    LANGUAGE="en_US:en" \
    LC_ALL="en_US.UTF-8"

EXPOSE ${EXPOSE_PORT}
ENTRYPOINT ["/bin/minit"]

################################################
# app layer you want to build
#CMD [ "/usr/sbin/zabbix_agent2", "--foreground", "-c", "/etc/zabbix/zabbix_agent2.conf" ]